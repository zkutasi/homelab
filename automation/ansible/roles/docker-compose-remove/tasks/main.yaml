- name: Get the version of docker compose
  check_mode: false
  environment:
    PATH: "{{ path_extension_list | join(':') }}:{{ lookup('env', 'PATH') }}"
  block:
    - name: Check the version of docker compose (v2)
      ansible.builtin.command:
        cmd: "docker compose version"
      register: docker_compose_version_output
      changed_when: false
    - name: Extract exact version (v2)
      ansible.builtin.set_fact:
        docker_compose_installed_version: "{{ docker_compose_version_output.stdout_lines[0]
          | regex_search('Docker Compose version v?([0-9\\.]*)', '\\1') | first }}"
    - name: Print out the docker compose version (v2)
      ansible.builtin.debug:
        var: docker_compose_installed_version
  rescue:
    - name: Falling back to v1
      ansible.builtin.debug:
        msg: "Falling back to docker-compose v1"
    - name: Check the version of docker compose (v1)
      ansible.builtin.command:
        cmd: "docker-compose --version"
      register: docker_compose_version_output
      changed_when: false
    - name: Extract exact version (v1)
      ansible.builtin.set_fact:
        docker_compose_installed_version: "{{ docker_compose_version_output.stdout_lines[0]
          | regex_search('docker-compose version v?([0-9\\.]*)', '\\1') | first }}"
    - name: Print out the docker compose version (v1)
      ansible.builtin.debug:
        var: docker_compose_installed_version
- name: Check if docker-compose.yaml is present
  ansible.builtin.stat:
    path: "{{ docker_compose_rootdir }}/{{ docker_compose_projectname }}/docker-compose.yaml"
  register: docker_compose_file
- name: Docker compose down (v2)
  when: docker_compose_installed_version is version('2.0', '>=')
    and docker_compose_file.stat.exists
  become: "{{ docker_with_sudo }}"
  community.docker.docker_compose_v2:
    project_src: "{{ docker_compose_rootdir }}/{{ docker_compose_projectname }}"
    docker_cli: "{{ docker_cli_path }}"
    state: absent
    remove_images: all
    remove_volumes: true
    remove_orphans: true
- name: Docker compose down (v1)
  when: (docker_compose_installed_version | length == 0 or docker_compose_installed_version is version('2', '<'))
    and docker_compose_file.stat.exists
  become: "{{ docker_with_sudo }}"
  community.docker.docker_compose:
    project_src: "{{ docker_compose_rootdir }}/{{ docker_compose_projectname }}"
    state: absent
    remove_images: all
    remove_volumes: true
    remove_orphans: true
- name: Delete the docker-compose directory if it exists
  become: true
  ansible.builtin.file:
    path: "{{ docker_compose_rootdir }}/{{ docker_compose_projectname }}"
    state: absent
