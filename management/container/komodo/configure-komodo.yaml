- name: List all Servers on the REST API
  hosts: localhost
  tasks:
    - name: Call the REST API
      ansible.builtin.include_role:
        name: rest-api
      vars:
        rest_api_fact_name: "komodo_servers"
    - name: Debug URLs
      ansible.builtin.debug:
        msg: "{{ komodo_servers.json | community.general.json_query('[*].info.address') }}"
  vars:
    rest_api_url: "{{ komodo_host }}"
    rest_api_endpoint: "/read"
    rest_api_method: "POST"
    rest_api_headers:
      X-API-Key: "{{ komodo_api_key }}"
      X-API-Secret: "{{ komodo_api_secret }}"
    rest_api_data:
      type: "ListServers"
      params: {}
    rest_api_body_format: "json"
- name: Create new servers
  hosts: localhost
  tasks:
    - name: Call the REST API
      ansible.builtin.include_role:
        name: rest-api
      when: not (komodo_servers.json | selectattr('info.address', 'contains', 'https://' + hostvars[item].ansible_host + ':8120'))
      loop: "{{ groups['standalone'] + groups['external'] + groups['synology'] }}"
      loop_control:
        label: "{{ hostvars[item].id }}"
      vars:
        rest_api_data:
          type: "CreateServer"
          params:
            name: "{{ hostvars[item].id }}"
            config:
              address: "https://{{ hostvars[item].ansible_host }}:8120"
              enabled: true
              auto_prune: false
  vars:
    rest_api_url: "{{ komodo_host }}"
    rest_api_endpoint: "/write"
    rest_api_method: "POST"
    rest_api_headers:
      X-API-Key: "{{ komodo_api_key }}"
      X-API-Secret: "{{ komodo_api_secret }}"
    rest_api_body_format: "json"
- name: List all filesystem docker compose projects
  hosts:
    - standalone
    - external
    - synology
  tasks:
    - name: List the folders
      ansible.builtin.find:
        paths: "{{ ansible_user_dir }}/docker-compose"
        file_type: directory
      register: docker_compose_projects
    - name: Set the list in a fact for later use
      ansible.builtin.set_fact:
        docker_compose_projects: "{{ docker_compose_projects.files | map(attribute='path') | map('basename') | list }}"
    - name: Debug folders
      ansible.builtin.debug:
        msg: "{{ docker_compose_projects }}"
- name: List all Stacks on the REST API
  hosts: localhost
  tasks:
    - name: Call the REST API
      ansible.builtin.include_role:
        name: rest-api
      vars:
        rest_api_fact_name: "komodo_stacks"
    - name: Debug Stacks
      ansible.builtin.debug:
        msg: "{{ komodo_stacks.json | community.general.json_query('[*].name') }}"
  vars:
    rest_api_url: "{{ komodo_host }}"
    rest_api_endpoint: "/read"
    rest_api_method: "POST"
    rest_api_headers:
      X-API-Key: "{{ komodo_api_key }}"
      X-API-Secret: "{{ komodo_api_secret }}"
    rest_api_data:
      type: "ListStacks"
      params: {}
    rest_api_body_format: "json"
- name: Gather detailed stack information on the REST API
  hosts: localhost
  tasks:
    - name: Call the REST API
      ansible.builtin.include_role:
        name: rest-api
      vars:
        rest_api_fact_name: "komodo_stacks_detailed_{{ item.name | replace('-', '_') }}"
      loop: "{{ komodo_stacks.json }}"
  vars:
    rest_api_url: "{{ komodo_host }}"
    rest_api_endpoint: "/read"
    rest_api_method: "POST"
    rest_api_headers:
      X-API-Key: "{{ komodo_api_key }}"
      X-API-Secret: "{{ komodo_api_secret }}"
    rest_api_data:
      type: "GetStack"
      params:
        stack: "{{ item.name }}"
    rest_api_body_format: "json"
- name: Create new stacks
  hosts:
    - standalone
    - external
    - synology
  tasks:
    - name: Call the REST API
      ansible.builtin.include_role:
        name: rest-api
        apply:
          delegate_to: localhost
      when: hostvars['localhost'].komodo_stacks.json | selectattr('name', 'equalto', hostvars[inventory_hostname].id + '-' + item) | length == 0
      loop: "{{ docker_compose_projects }}"
      loop_control:
        label: "{{ hostvars[inventory_hostname].id }} - {{ item }}"
      vars:
        rest_api_data:
          type: "CreateStack"
          params:
            name: "{{ hostvars[inventory_hostname].id }}-{{ item }}"
            config:
              server_id: "{{ (hostvars['localhost'].komodo_servers.json | selectattr('name', 'equalto', inventory_hostname) | first).id }}"
              files_on_host: true
              run_directory: "{{ ansible_user_dir }}/docker-compose/{{ item }}"
              file_paths:
                - docker-compose.yaml
              poll_for_updates: true
              project_name: "{{ item }}"
  vars:
    rest_api_url: "{{ komodo_host }}"
    rest_api_endpoint: "/write"
    rest_api_method: "POST"
    rest_api_headers:
      X-API-Key: "{{ komodo_api_key }}"
      X-API-Secret: "{{ komodo_api_secret }}"
    rest_api_body_format: "json"
