// *************
// ** TARGETS **
// *************

logging {
  level  = "info"
  format = "logfmt"
}

loki.write "default" {
  endpoint {
    tenant_id = "Home"
    url = "https://loki.kubernetes.home:443/loki/api/v1/push"
    tls_config {
      insecure_skip_verify = true
    }
  }
}

prometheus.remote_write "default" {
  endpoint {
    url = "https://prometheus.kubernetes.home:443/api/v1/write"
    tls_config {
      insecure_skip_verify = true
    }
  }
}

// ***************************
// ** SYSTEM LOGS & JOURNAL **
// ***************************

local.file_match "system" {
  path_targets = [{
    __address__ = "localhost",
    __path__    = "/var/log/{syslog,messages,*.log}",
    instance    = "{{ id }}",
    job         = string.format("%s-logs", "{{ id }}"),
  }]
}

loki.source.file "system" {
  targets    = local.file_match.system.targets
  forward_to = [loki.write.default.receiver]
}

loki.source.journal "journal" {
  max_age       = "24h0m0s"
  relabel_rules = discovery.relabel.journal.rules
  forward_to    = [loki.write.default.receiver]
  labels        = {
    component = string.format("%s-journal", "{{ id }}"),
    job = string.format("%s-journal", "{{ id }}"),
  }
  // NOTE: This is important to fix https://github.com/grafana/alloy/issues/924
  path          = "/var/log/journal"
}

discovery.relabel "journal" {
  targets = []
  rule {
    source_labels = ["__journal__systemd_unit"]
    target_label  = "unit"
  }
  rule {
    source_labels = ["__journal__boot_id"]
    target_label  = "boot_id"
  }
  rule {
    source_labels = ["__journal__transport"]
    target_label  = "transport"
  }
  rule {
    source_labels = ["__journal_priority_keyword"]
    target_label  = "level"
  }
}

// *****************************
// ** SECTION: SYSTEM METRICS **
// *****************************

prometheus.exporter.unix "metrics" {
  disable_collectors = ["ipvs", "btrfs", "infiniband", "xfs", "zfs"]
  enable_collectors = ["meminfo"]
  filesystem {
    fs_types_exclude     = "^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|tmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
    mount_points_exclude = "^/(dev|proc|run/credentials/.+|sys|var/lib/docker/.+)($|/)"
    mount_timeout        = "5s"
  }
  netclass {
    ignored_devices = "^(veth.*|cali.*|[a-f0-9]{15})$"
  }
  netdev {
    device_exclude = "^(veth.*|cali.*|[a-f0-9]{15})$"
  }
}

discovery.relabel "metrics" {
  targets = prometheus.exporter.unix.metrics.targets
  rule {
    target_label = "host"
    replacement  = "{{ id }}"
  }
  rule {
    target_label = "job"
    replacement = string.format("%s-metrics", "{{ id }}")
  }
}

prometheus.scrape "metrics" {
scrape_interval = "15s"
  targets    = discovery.relabel.metrics.output
  forward_to = [prometheus.remote_write.default.receiver]
}
